extends layout-index

block content
    head
        title Blog
        link(rel='stylesheet' href='/blog.css')
        link(rel='stylesheet' href='/index.css')



    body

        .col.col-lg-12.col-md-12.col-sm-12.col-12.p-3
            .row.d-flex.justify-content-center.p-2
                each publicacion in Publicaciones
                    - const isVideo = publicacion.imagenUrl.endsWith('.mp4')
                    - const imageUrl = publicacion.imagenUrl === 'none' ? null : `/${publicacion.imagenUrl}`
                    .blog-container.col-lg-5.col-md-5.col-sm-11.col-11.mx-3
                        .blog-author.mt-4.d-flex.align-items-center
                            img(src=`/${publicacion.Usuario.imagenUrl}`)
                            h3= publicacion.Usuario.nombreCompleto
                        .blog-header
                            - if (isVideo)
                                video.video-body(controls poster=imageUrl)
                                    source(src=imageUrl type='video/mp4')
                            - else if (imageUrl)
                                .blog-cover
                                    img(src=imageUrl, class=`expandable-image expandable-image-${publicacion.id}`, alt="")




                        .blog-body
                            .blog-title
                                h1
                                    a(href='javascript:void(0)')= publicacion.titulo
                            .blog-summary
                                p= publicacion.descripcion

                        .blog-footer
                            ul
                                li.published-date= publicacion.fechaSubida
                                li.comments
                                    a(href='javascript:void(0)' class='view-comments', data-publicacion-id=publicacion.id)
                                        i.ion-ios-chatbubble
                                        span.numero #{Comentarios.filter(comentario => comentario.idPublicacion === publicacion.id).length}


        #expanded-image-container
            .expanded-image
                img(src="" alt="")
            span.close-button ×



        #comment-modal.modal.fade
            .modal-dialog.modal-dialog-centered.modal-dialog-scrollable
                .modal-content
                    .modal-header
                        h5.modal-title Comentarios
                    .modal-body
                        ul#comment-list.p-0
                    .modal-footer
                        button.btn.btn-secondary(type="button" data-dismiss="modal") Cerrar



    script.
        $(document).ready(function () {
            // Cuando se hace clic en una imagen expandible
            $(".expandable-image").on("click", function () {
                const imageUrl = $(this).attr("src");
                $("#expanded-image-container img").attr("src", imageUrl);
                $("#expanded-image-container").fadeIn();
            });

            // Cuando se hace clic en el botón de cerrar
            $("#expanded-image-container .close-button").on("click", function () {
                $("#expanded-image-container").fadeOut();
            });




                $(".view-comments").on("click", function () {
                    const publicacionId = $(this).data("publicacion-id");

                    // Realizar la solicitud AJAX para obtener los comentarios
                    $.ajax({
                        url: `/comentarios/view-comentarios/${publicacionId}`,
                        type: "GET",
                        success: function (data) {
                            // Limpiar la lista de comentarios antes de mostrar los nuevos comentarios
                            $("#comment-list").empty();

                            // Agregar cada comentario a la lista
                            data.comentarios.forEach(function (comentario) {
                                const listItem = $("<li>").addClass("comment-item");

                                // Imagen redonda del comentario
                                const commentImage = $("<img>").attr("src","/"+data.imagenesUrls[Math.floor(Math.random() * data.imagenesUrls.length)] );
                                listItem.append(commentImage);

                                // Contenedor para la información del comentario
                                const commentInfo = $("<div>").addClass("comment-info");

                                // Descripción del comentario
                                const commentDescription = $("<div>").addClass("comment-description").text(comentario.descripcion);
                                commentInfo.append(commentDescription);

                                // Fecha del comentario
                                const commentDate = $("<div>").addClass("comment-date").text(comentario.fechaEnvio);
                                commentInfo.append(commentDate);

                                // Agregar el contenedor de información del comentario al listItem
                                listItem.append(commentInfo);

                                // Agregar el listItem a la lista de comentarios
                                $("#comment-list").append(listItem);
                            });

                            // Mostrar el modal con los comentarios
                            $("#comment-modal").modal("show");

                                $("#comment-modal .modal-footer button").on("click", function () {
                                    $("#comment-modal").modal("hide");
                                    });


                        },
                        error: function () {
                            // Mostrar un mensaje de error si no se pudieron obtener los comentarios
                            $("#comment-list").empty().text("No hay comentarios disponibles por el momento");
                            $("#comment-modal").modal("show");
                        }
                    });
                        });
                });












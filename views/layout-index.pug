doctype html
html
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible" content="IE=edge")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")

    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet")
    link(rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css")
    link(href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css" rel="stylesheet")

    script(src="https://unpkg.com/sweetalert/dist/sweetalert.min.js")
    script(src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js")
    script(src="https://cdn.jsdelivr.net/npm/@splidejs/splide-extension-grid@0.4.1/dist/js/splide-extension-grid.min.js")
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")

    link(href="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css" rel="stylesheet")
    script(src="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.js" defer)

    link(rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css")
    script(src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js")

    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")

    link(href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" rel="stylesheet")
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")
    script(src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js")

    //link(rel='stylesheet' href='/producto.css')


    script(src="/sweetAlert.js" defer)
    link(rel='stylesheet' href='/carrito-compras.css')
    link(rel='stylesheet' href='/nav.css')



  body
    block content

    

    nav.navbar.navbar-expand-lg.navbar-light.bg-light.fixed-top
      .container-fluid
        button.navbar-toggler(type="button" data-bs-toggle="collapse" data-bs-target="#navbar" aria-controls="navbar" aria-expanded="false" aria-label="Toggle navigation")
          span.navbar-toggler-icon
          span#totalItems_nav 0 

        .contain-btn-empleado
          a(href="/auth/view/login").cta
            span Soy empleado
            svg(viewBox="0 0 13 10" height="10px" width="15px")
              path(d="M1,5 L11,5")
              polyline(points="8 1 12 5 8 9")

        #navbar.collapse.navbar-collapse

          ul.navbar-nav.ms-auto.p-2


            li.nav-item.mx-3
              a.nav-link(href="/") INICIO

            li.nav-item.mx-3
              a.nav-link(href="/blog/view-blog") BLOG


            if locals.isLoggedIn 
              li.nav-item.mx-3
                a.nav-link(href="/home") Home

            a.cart-icon(data-toggle="modal" data-target="#carritoModal" ).mx-3
              span#totalItems 0      




    div.modal#carritoModal.p-2
      form.modal-dialog(action="/comprar" method="POST")
        .modal-content
          .modal-header
            h5.modal-title Mi carrito
            span.total-suma
          .modal-footer
            .col-12

              .row.input-container.mt-2
                .col-12
                  .form-floating
                    input.form-control#nombreInput(type="text" name="nombre" placeholder="Nombre completo" required)
                    label(for="nombreInput") Nombre completo
              .row.input-container.mt-2
                .col-12
                  .form-floating
                    input.form-control#contactoInput(type="text" name="contacto" placeholder="Contacto" required)
                    label(for="contactoInput") Contacto

              .row.input-container.mt-2
                .col-6
                  .form-floating
                    select.form-control#zonaInput(name=`zona`)
                      each direccion in Direcciones
                        option(value=`${direccion.id}`)= direccion.nombre
                      option(value="otraZona") escribir otro
                    label(for="zonaInput") Zona  
                .col-6
                  .form-floating
                    input.form-control#direccionInput(type="text" name="direccion" placeholder="Dirección" required)
                    label#direccionLabel(for="direccionInput") dirección

              .row.input-container#otroInputContainer.mt-2(style='display: none;')
                .col-6
                  .form-floating
                    input.form-control(type='text' id='otroInput' name='otraZona' placeholder='Otra Zona')
                    label(for='otroInput') Zona
                .col-6
                  .form-floating
                    input.form-control#otraDireccionInput(type="text" name="otraDireccion" placeholder="Otra dirección" required)
                    label(for="otraDireccionInput") Dirección    

              .row.input-container.mt-2
                .col-12
                  .form-floating
                    input.form-control#metodoPago(type="text" name="metodoPago" placeholder="Método de pago" required)
                    label(for="metodoPago") Método de pago

              .contain-btns-carrito.d-flex

                button.form-control.btn.btn-primary.hacer-pedido-btn(ids="generarObjetoBtn" type="submit") Hacer pedido

                button.form-control.btn.btn-secondary.cerrar(type="button" data-dismiss="modal") Cerrar          
          .modal-body
            ul.cart


    script.
      const zonaInput = document.getElementById('zonaInput');
        const otroInputContainer = document.getElementById('otroInputContainer');
        const direccionInput = document.getElementById('direccionInput');
        const direccionLabel = document.getElementById('direccionLabel');

        zonaInput.addEventListener('change', () => {
          const selectedOption = zonaInput.options[zonaInput.selectedIndex].value;
          if (selectedOption === 'otraZona') {
            otroInputContainer.style.display = 'flex';
            direccionInput.style.display = 'none';
            direccionLabel.style.display = 'none';
          } else {
            otroInputContainer.style.display = 'none';
            direccionInput.style.display = 'flex';
            direccionLabel.style.display = 'flex';
          }
        });



    script.

      function getParameterByName(name) {
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
          results = regex.exec(window.location.search);
        if (!results) return null;
        if (!results[2]) return "";
        return decodeURIComponent(results[2].replace(/\+/g, " "));
      }

      function showErrorAlert() {
        const error = getParameterByName("error");
        if (error) {
          swal({
            icon: "error",
            title: "Error",
            text: error,
            timer: 3000,
            timerProgressBar: true
          });
        }
      }

      showErrorAlert();
doctype html
html
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible" content="IE=edge")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")

    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet")
    link(rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css")
    link(href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css" rel="stylesheet")

    script(src="https://unpkg.com/sweetalert/dist/sweetalert.min.js")
    script(src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js")
    script(src="https://cdn.jsdelivr.net/npm/@splidejs/splide-extension-grid@0.4.1/dist/js/splide-extension-grid.min.js")
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")

    link(href="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css" rel="stylesheet")
    script(src="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.js" defer)

    link(rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css")
    script(src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js")

    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")

    link(href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" rel="stylesheet")
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")
    script(src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js")




    script(src="/sweetAlert.js" defer)

    link(rel='stylesheet' href='/nav.css')


  body
    block content


    script.
      // Función para obtener los parámetros de la URL
      function getParameterByName(name) {
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
          results = regex.exec(window.location.search);
        if (!results) return null;
        if (!results[2]) return "";
        return decodeURIComponent(results[2].replace(/\+/g, " "));
      }

      // Función para mostrar el SweetAlert en caso de error
      function showErrorAlert() {
        const error = getParameterByName("error");
        if (error) {
          swal({
            icon: "error",
            title: "Error",
            text: error,
            timer: 3000,
            timerProgressBar: true
          });
        }
      }

      // Llama a la función para mostrar el SweetAlert al cargar la página
      showErrorAlert();